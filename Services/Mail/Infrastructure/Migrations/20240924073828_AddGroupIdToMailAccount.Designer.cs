// <auto-generated />
using System;
using System.Collections.Generic;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240924073828_AddGroupIdToMailAccount")]
    partial class AddGroupIdToMailAccount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.MailAccounts.MailAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Character_set")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<int>("IMAP_Port")
                        .HasColumnType("integer");

                    b.Property<int>("IMAP_Security")
                        .HasColumnType("integer");

                    b.Property<string>("IMAP_Server")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_token")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MailAccounts");
                });

            modelBuilder.Entity("Domain.MailRules.MailRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Action")
                        .HasColumnType("integer");

                    b.Property<string>("Action_parameter")
                        .HasColumnType("text");

                    b.Property<Guid?>("Assign_correspondent")
                        .HasColumnType("uuid");

                    b.Property<int?>("Assign_correspondent_from")
                        .HasColumnType("integer");

                    b.Property<Guid?>("Assign_document_type")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Assign_owner_from_rule")
                        .HasColumnType("boolean");

                    b.Property<List<Guid>>("Assign_tags")
                        .HasColumnType("uuid[]");

                    b.Property<int?>("Assign_title_from")
                        .HasColumnType("integer");

                    b.Property<int>("Attachment_type")
                        .HasColumnType("integer");

                    b.Property<int>("Consumption_scope")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Filter_attachment_filename")
                        .HasColumnType("text");

                    b.Property<string>("Filter_body")
                        .HasColumnType("text");

                    b.Property<string>("Filter_from")
                        .HasColumnType("text");

                    b.Property<string>("Filter_subject")
                        .HasColumnType("text");

                    b.Property<string>("Filter_to")
                        .HasColumnType("text");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Maximum_age")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("MailRules");
                });

            modelBuilder.Entity("Domain.MailRules.MailRule", b =>
                {
                    b.HasOne("Domain.MailAccounts.MailAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
